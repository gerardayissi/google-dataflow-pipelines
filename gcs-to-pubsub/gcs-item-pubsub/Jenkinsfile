pipeline {
   agent any
       tools {
           maven 'Maven 3.6.3'
           jdk 'jdk8'
       }
   environment {
           ARTIFACT_PATH = 'gcs-to-pubsub/gcs-item-pubsub'
           PROJECT_ID   = 'tst1-integration-3ca6'
           GCLOUD_PATH    = '/Users/hgo2/Downloads/google-cloud-sdk/bin'
           AUTH_JSON    = '/Users/hgo2/google/keys/tbi-mao-tst1.json'
           SERVICE_ACCOUNT    = 'project-service-account@tst1-integration-3ca6.iam.gserviceaccount.com'
   }
   parameters {
      string(name: 'PERSON', defaultValue: 'Mr Jenkins', description: 'Who should I say hello to?')
      text(name: 'BIOGRAPHY', defaultValue: '', description: 'Enter some information about the person')
      booleanParam(name: 'TOGGLE', defaultValue: true, description: 'Toggle this value')
      choice(name: 'CHOICE', choices: ['One', 'Two', 'Three'], description: 'Pick something')
      password(name: 'PASSWORD', defaultValue: 'SECRET', description: 'Enter a password')
  }
   stages {
     stage('Example') {
         steps {
             echo "Hello ${params.PERSON}"
             echo "Biography: ${params.BIOGRAPHY}"
             echo "Toggle: ${params.TOGGLE}"
             echo "Choice: ${params.CHOICE}"
             echo "Password: ${params.PASSWORD}"
         }
     }
     stage ('Build Maven Project') {
      steps {
        git url: 'https://github.com/gerardayissi/google-dataflow-pipelines.git'
        // using the Pipeline Maven plugin we can set maven configuration settings, publish test results, and annotate the Jenkins console
        withMaven (
        maven: 'Maven 3.6.3',
        jdk:   'jdk8'
        ){
          //sh "mvn clean verify"
          sh "mvn install"
        }
      }
    }
    stage('Create Dataflow Template') {
           steps {
               sh '''
                   cd ${ARTIFACT_PATH}

                   mvn compile exec:java \
                   -Dexec.mainClass=com.google.cloud.gcsitempubsub \
                   -Dexec.cleanupDaemonThreads=false \
                   -Dexec.args="--project=${PROJECT_ID} \
                   --region=us-east4 \
                   --stagingLocation=gs://tst1-integration-3ca6-gerard/pipeline/staging \
                   --templateLocation=gs://tst1-integration-3ca6-gerard/pipeline/template/template-gcs-sample-001 \
                   --serviceAccount=project-service-account@tst1-integration-3ca6.iam.gserviceaccount.com \
                   --subnetwork=https://www.googleapis.com/compute/v1/projects/network-b2b9/regions/us-east4/subnetworks/np-integration4 \
                   --numWorkers=10 \
                   --autoscalingAlgorithm=THROUGHPUT_BASED \
                   --workerMachineType=n1-standard-2 \
                   --enableStreamingEngine=true \
                   --maxNumWorkers=10 \
                   --filesToStage=target/gcs-item-pubsub-1.0.jar \
                   --runner=DataflowRunner"
                  '''
           }
       }
       stage('Deploy Pipeline Job') {
          steps {
              sh '''
                  ${GCLOUD_PATH}/gcloud auth activate-service-account ${SERVICE_ACCOUNT} --key-file ${AUTH_JSON}
                  ${GCLOUD_PATH}/gcloud config set project ${PROJECT_ID}
                  export GOOGLE_APPLICATION_CREDENTIALS=${AUTH_JSON}

                  ${GCLOUD_PATH}/gcloud dataflow jobs run gerard-gcs-to-pubsub-sample-001 \
                  --region=us-east4  \
                  --gcs-location gs://tst1-integration-3ca6-gerard/pipeline/template/template-gcs-sample-001
              '''
          }
      }
}
}